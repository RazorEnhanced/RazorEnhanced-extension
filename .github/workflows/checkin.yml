name: Build VSIX

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: make npm-install

    - name: Update version with Git hash
      run: bash update-version.sh

    - name: Install vsce
      run: npm install -g vsce

    - name: Package Extension
      run: vsce package

    - name: List files in the working directory
      run: ls -al

    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v3
      with:
        name: vsix
        path: razorenhanced-*.vsix

    - name: Get short commit hash
      id: get_short_hash
      run: |
        SHORT_HASH=$(git rev-parse --short HEAD)
        echo "SHORT_HASH=$SHORT_HASH" >> $GITHUB_ENV
        echo "Short commit hash: $SHORT_HASH"

    - name: Check commit SHA
      run: echo "Commit SHA - ${{ env.SHORT_HASH }}"
      
    - name: Set VSIX file path
      id: set_path
      run: |
        # Find the VSIX file
        VSIX_FILE=$(ls razorenhanced-*.vsix)
        echo "VSIX file found: $VSIX_FILE"
        echo "VSIX_FILE=$VSIX_FILE" >> $GITHUB_ENV

    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v3
      with:
        name: vsix
        path: "${{ env.VSIX_FILE }}"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.SHORT_HASH }}
        release_name: Release v${{ env.SHORT_HASH }}
        body: Automated release
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}	

    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.VSIX_FILE }}
        asset_name: razorenhanced-v${{ env.SHORT_HASH }}.vsix
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}	

